apiVersion: apps/v1
kind: Deployment
metadata:
  name: poll
spec:
  selector:
    matchLabels:
      app: poll
  replicas: 1
  template:
    metadata:
      labels:
        app: poll
    spec:
      containers:
        - name: poll
          image: bortolini/poll:1.1
          imagePullPolicy: IfNotPresent
          env:
          - name: POSTGRES_USER
            value: "admin"
          - name: POSTGRES_PASSWORD
            value: "psltest"
          - name: POSTGRES_URL
            value: "jdbc:postgresql://postgres.default.svc.cluster.local:5432/postgres"
          - name: RABBITMQ_USER
            value: "guest"
          - name: RABBITMQ_PASSWORD
            value: "guest"
          - name: RABBITMQ_HOST
            value: "rabbitmq-nodeport.default.svc.cluster.local"
          - name: RABBITMQ_PORT
            value: "5672"
          - name: REDIS_HOST
            value: "redis-db-svc.default.svc.cluster.local"
          - name: REDIS_PORT
            value: "6379"
          - name: ENCRYPT_KEY
            value: "GzbYhpW8LK0O47vcpTDAHVYSGcButL87"
          ports:
            - containerPort: 8080
---   
# apiVersion: v1
# kind: Service
# metadata:
#   name: poll
# spec:
#   selector:
#     app: poll
#   ports:
#     - port: 80
#       targetPort: 8080
#   type: LoadBalancer
apiVersion: v1
kind: Service
metadata:
  name: poll
  labels:
    app: poll
spec:
  selector:
    app: poll
  ports:
    - name: api
      protocol: TCP
      port: 80
      targetPort: 8080
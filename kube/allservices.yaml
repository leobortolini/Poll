apiVersion: v1
kind: Service
metadata:
  name: redis-db-svc
  labels:
    app: redis
spec:
  selector:
    app: redis
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-deployment
  labels:
    app: redis
spec:
  selector:
    matchLabels:
      app: redis
  replicas: 1
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: redis
          imagePullPolicy: IfNotPresent
          ports:
          - protocol: TCP
            containerPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: redis-db-svc-2
  labels:
    app: redis-2
spec:
  selector:
    app: redis-2
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-deployment-2
  labels:
    app: redis-2
spec:
  selector:
    matchLabels:
      app: redis-2
  replicas: 1
  template:
    metadata:
      labels:
        app: redis-2
    spec:
      containers:
        - name: redis-2
          image: redis
          imagePullPolicy: IfNotPresent
          ports:
          - protocol: TCP
            containerPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq-svc
spec:
  selector:
    app: rabbitmq
  ports:
    - name: amqp
      protocol: TCP
      port: 5672
      targetPort: 5672
    - name: management
      protocol: TCP
      port: 15672
      targetPort: 15672
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: rabbitmq-pv
  labels:
    app: rabbitmq
spec:
  capacity:
    storage: 10Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: manual
  hostPath:
    path: "/mnt/data"  
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: rabbitmq-pvc
  labels:
    app: rabbitmq
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
        - name: rabbitmq
          image: rabbitmq:3.11.17-management
          ports:
            - containerPort: 5672
            - containerPort: 15672
          volumeMounts:
            - name: rabbitmq-storage
              mountPath: /var/lib/rabbitmq/mnesia
      hostname: rmq-host
      volumes:
        - name: rabbitmq-storage
          persistentVolumeClaim:
            claimName: rabbitmq-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: mailhog-svc
  labels:
    app: mailhog
spec:
  selector:
    app: mailhog
  ports:
    - name: smtp
      protocol: TCP
      port: 1025
      targetPort: 1025
    - name: server
      protocol: TCP
      port: 8025
      targetPort: 8025
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mailhog-deployment
  labels:
    app: mailhog
spec:
  selector:
    matchLabels:
      app: mailhog
  replicas: 1
  template:
    metadata:
      labels:
        app: mailhog
    spec:
      containers:
        - name: mailhog
          image: mailhog/mailhog:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 1025
            - containerPort: 8025